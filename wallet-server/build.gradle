buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.google.protobuf:protobuf-gradle-plugin:0.8.6')
	}
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

def grpcVersion = '1.19.0'
def protobufVersion = '3.7.0'
def protocVersion = protobufVersion
def springBootGrpcVersion='2.0.1.RELEASE'

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
	generatedFilesBaseDir = "$projectDir/src/generated"
}

idea {
	module {
		sourceDirs += file("${projectDir}/src/generated/main/java");
		sourceDirs += file("${projectDir}/src/generated/main/grpc");
	}
}

group = 'com.xhhuango'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compile fileTree(dir: 'oracle', include: ['*.jar'])
	runtimeOnly('com.h2database:h2')
	
	//compile("net.devh:grpc-server-spring-boot-starter:${grpcVersion}")
	//compile 'io.github.lognet:grpc-spring-boot-starter:3.1.0'

	compile "io.grpc:grpc-netty:${grpcVersion}"
	compile "io.grpc:grpc-protobuf:${grpcVersion}"
	compile "io.grpc:grpc-stub:${grpcVersion}"
	compile("net.devh:grpc-server-spring-boot-starter:${springBootGrpcVersion}")
	

	compileOnly('org.projectlombok:lombok')

	testImplementation('org.springframework.boot:spring-boot-starter-test')
}
